# Общая идея:
#
# Игрок управляет процессом на **игровом поле размером 8×8, заполненном случайными элементами (например, буквами A–E). Цель — **менять местами соседние элементы**, чтобы собирать ряды/столбцы из одинаковых символов (3 и более), которые **исчезают**, а сверху **падают новые элементы**. Игра продолжается до тех пор, пока возможны ходы. Подсчитываются очки, учитываются ходы и применяются бонусы.
#
# Основные сущности (5–7 АТД):
#
# 1. GameField (Игровое поле)
# Что делает:
# Хранит текущую матрицу 8×8 элементов.
# Отвечает за генерацию случайных элементов, проверку валидности перестановок, поиск комбинаций, удаление совпавших элементов и «падение» новых сверху.
#
# 2. Cell (Ячейка)
# Что делает:
# Представляет собой отдельный элемент поля.
# Хранит тип (буква A–E) и возможную метку (например, "бонусная").
# Может быть пустой или занята элементом.
#
# 3. MoveProcessor (Обработчик хода)
#
# Что делает:
# Получает команды от игрока (например, "A1 A2"), проверяет допустимость перестановки, делает её, запускает проверку на комбинации, а затем обрабатывает всю цепочку исчезновений и падений новых элементов.
#
# 4. GameLoop (Игровой цикл)
# Что делает:
# Управляет основным циклом игры: ввод, проверка, обработка, вывод поля, ожидание следующего хода.
# Отвечает за запуск и перезапуск игры, а также за завершение.
#
# 5. ScoreTracker (Подсчёт очков)
# Что делает:
# Считает очки за каждый ход, в зависимости от длины комбинаций.
# Учитывает прогрессивную шкалу и бонусы.
# Ведёт статистику ходов, комбинаций, общих очков.
#
# 6. BonusManager (Управление бонусами)
#
# Что делает:
# Определяет, когда активируются бонусы (например, при 4+ элементах).
# Применяет особые эффекты (удаление ряда, типа, крестовины).
# Интегрируется с `GameField` и `MoveProcessor`.
#
# 7. UI (Пользовательский интерфейс)
#
# Что делает:
# Выводит текущее состояние поля в консоль.
# Запрашивает ввод пользователя, обрабатывает ошибки, показывает результаты, статистику.
# Разделяет пошаговый и итоговый вывод.
#
# Как всё вместе работает:
#
# GameLoop инициирует игру и повторяет цикл: `UI` → `MoveProcessor` → `GameField` + `BonusManager` → `ScoreTracker` → `UI`.
# Игровое поле — это главный источник данных, над которым работают остальные компоненты.
# Все действия в системе происходят через явно выделенные модули, что позволяет легко тестировать и расширять поведение.