'''

15 примеров плохих комментариев с исправлениями на основе материалов лекции

1. Неочевидные комментарии:

# Инкрементируем переменную
i += 1

Улучшение:

# Увеличиваем счетчик на 1
i += 1

2. Бормотание:

# Функция обработки данных
def process_data(data):
    # код обработки данных
    pass

Улучшение:

# Обрабатываем данные
def process_data(data):
    # реальный код обработки данных
    pass

3. Недостоверные комментарии:

# Переменная, содержащая сумму элементов списка
total = sum(elements)  # Верно, потому что это сумма

Улучшение:

# Переменная, содержащая сумму элементов списка
total = sum(elements)  # Считаем сумму элементов списка

4. Шум:

# Инициализация переменной
x = 5

Улучшение:

# Начальное значение для x
x = 5

5. Позиционные маркеры:

# /////////////////////////////////////////////////
# Этот код выполняет важную функцию
# /////////////////////////////////////////////////

Улучшение:

# Этот код выполняет важную функцию

6. Комментарии за закрывающей фигурной скобкой:

# Завершение цикла
for i in range(10):
    # код цикла
}  # завершение цикла

Улучшение:

# Код цикла
for i in range(10):
    # код цикла

7. Избыточные комментарии:

# Функция сложения двух чисел
def add_numbers(a, b):
    return a + b

Улучшение:

# Сложение двух чисел
def add_numbers(a, b):
    return a + b

8. Слишком много информации:

# Используем алгоритм сортировки пузырьком, также известный как метод перестановки

Улучшение:

# Используем алгоритм сортировки пузырьком

9. Нелокальная информация:

# Подключаемся к базе данных MySQL, используя следующие учетные данные

Улучшение:

# Подключаемся к базе данных MySQL


10. Обязательные комментарии:

# Каждая функция должна содержать комментарий с описанием
def example_function():
    pass

Улучшение:

def example_function():
    pass
# (комментарий не требуется, так как функция понятно выполняет задачу)


11. Закомментированный код:

# def old_function():
#     # код функции

Улучшение:
# Удален неиспользуемый код

12. Не используйте комментарии там, где можно использовать функцию или переменную:

# Умножаем каждый элемент списка на 2
result = [x * 2 for x in numbers]

Улучшение:

# Умножаем каждый элемент списка на 2
doubled_numbers = [x * 2 for x in numbers]


13. Неочевидные комментарии:

# Проверка, является ли переменная пустой строкой
if not name:
    # код обработки

Улучшение:

# Проверяем, является ли имя пустой строкой
if not name:
    # код обработки

14. Избыточные комментарии:

# Функция вычитания двух чисел
def subtract_numbers(a, b):
    return a - b  # Операция вычитания

Улучшение:

# Функция вычитания двух чисел
def subtract_numbers(a, b):
    return a - b

15. Закомментированный код:

# for i in range(10):
#     # код, который не нужен в данный момент

Улучшение:

# Закомментированный код, который не используется в данный момент
# for i in range(10):
#     # код, который не нужен в данный момент

'''